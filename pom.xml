<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.springframework.amqp</groupId>
	<artifactId>spring-amqp-dist</artifactId>
	<name>Spring AMQP Distribution</name>
	<description><![CDATA[Spring AMQP is framework that makes it easy to write Java applications for the Advanced Message Queue Protocol.  It supports a variety of common high-level messaging patterns, like synchronous and asynchronous consumers, synchronous producers, automatic re-connection, transactions, batching.  The emphasis is on declarative configuration and a POJO programming model without hiding the full power of the underlying protocol.
    ]]></description>
	<version>1.0.1.BUILD-SNAPSHOT</version>
	<packaging>pom</packaging>
	<modules> 
		<module>spring-amqp-parent</module>
		<module>spring-amqp-core</module>
		<module>spring-rabbit</module>
		<module>spring-erlang</module>
	</modules>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- dist.* properties are used by the antrun tasks below -->
		<dist.id>spring-amqp</dist.id>
		<dist.name>Spring AMQP</dist.name>
		<dist.key>AMQP</dist.key>
		<dist.version>${project.version}</dist.version>
		<dist.finalName>${dist.id}-${dist.version}</dist.finalName>
		<dist.fileName>${dist.finalName}.zip</dist.fileName>
		<dist.filePath>target/${dist.fileName}</dist.filePath>
		<dist.bucketName>dist.springframework.org</dist.bucketName>
		<!-- these properties should be in ~/.m2/settings.xml
		<dist.accessKey>s3 access key</dist.accessKey>
		<dist.secretKey>s3 secret key</dist.secretKey>
		-->
	</properties>
	<profiles>
		<profile>
			<id>staging</id>
			<properties>
			  <dist.staging>/${java.io.tmpdir}/spring-amqp/dist</dist.staging>
			</properties>
			<distributionManagement>
				<site>
					<id>spring-site-staging</id>
					<url>file:///${java.io.tmpdir}/spring-amqp/docs/${project.version}</url>
				</site>
				<repository>
					<id>spring-milestone-staging</id>
					<url>file:///${java.io.tmpdir}/spring-amqp/milestone</url>
				</repository>
				<snapshotRepository>
					<id>spring-snapshot-staging</id>
					<url>file:///${java.io.tmpdir}/spring-amqp/snapshot</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>
		<profile>
			<id>central</id>
			<distributionManagement>
			  <snapshotRepository>
				<id>sonatype-nexus-snapshots</id>
				<name>Sonatype Nexus Snapshots</name>
				<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			  </snapshotRepository>
			  <repository>
				<id>sonatype-nexus-staging</id>
				<name>Nexus Release Repository</name>
				<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
			  </repository>
			</distributionManagement>
			<build>
			  <plugins>
				<plugin>
				  <groupId>org.apache.maven.plugins</groupId>
				  <artifactId>maven-gpg-plugin</artifactId>
				  <executions>
					<execution>
					  <id>sign-artifacts</id>
					  <phase>verify</phase>
					  <goals>
						<goal>sign</goal>
					  </goals>
					</execution>
				  </executions>
				</plugin>
				<plugin>
				  <groupId>org.apache.maven.plugins</groupId>
				  <artifactId>maven-deploy-plugin</artifactId>
				  <configuration>
					<skip>true</skip>
				  </configuration>
				</plugin>
			  </plugins>
			</build>
		</profile>
		<profile>
			<id>milestone</id>
			<distributionManagement>
			  <repository>
				<id>spring-milestone</id>
				<name>Spring Milestone Repository</name>
				<url>s3://maven.springframework.org/milestone</url>
			  </repository>
			</distributionManagement>
		</profile>
		<profile>
			<id>upload</id>
			<build>
			  <plugins>
				<plugin>
				  <groupId>com.agilejava.docbkx</groupId>
				  <artifactId>docbkx-maven-plugin</artifactId>
				  <executions>
					<execution>
					  <goals>
						<goal>generate-html</goal>
						<goal>generate-pdf</goal>
					  </goals>
					  <phase>package</phase>
					</execution>
				  </executions>
				</plugin>
				<plugin>
				  <artifactId>maven-javadoc-plugin</artifactId>
				  <executions>
					<execution>
						<id>aggregate</id>
						<goals>
							<goal>aggregate</goal>
						</goals>
					  <phase>package</phase>
					</execution>
				  </executions>
				</plugin>
				<plugin><!--
						   run `mvn package assembly:assembly` to trigger assembly creation.
						   see http://www.sonatype.com/books/mvnref-book/reference/assemblies-set-dist-assemblies.html -->
				  <artifactId>maven-assembly-plugin</artifactId>
				  <version>2.2-beta-5</version>
				  <inherited>false</inherited>
				  <executions>
					<execution>
					  <id>distribution</id>
					  <goals>
						<goal>single</goal>
					  </goals>
					  <phase>package</phase>
					  <configuration>
						<descriptors>
						  <descriptor>${project.basedir}/src/assembly/distribution.xml</descriptor>
						</descriptors>
						<appendAssemblyId>false</appendAssemblyId>
					  </configuration>
					</execution>
				  </executions>
				</plugin>
				<plugin>
				  <groupId>org.apache.maven.plugins</groupId>
				  <artifactId>maven-antrun-plugin</artifactId>
				  <version>1.4</version>
				  <executions>
					<execution>
					  <id>upload-dist</id>
					  <phase>deploy</phase>
					  <goals>
						<goal>run</goal>
					  </goals>
					</execution>
				  </executions>
				  <configuration>
					<tasks>
					  <ant antfile="${basedir}/src/ant/upload-dist.xml">
						<target name="upload-dist" />
					  </ant>
					</tasks>
				  </configuration>
				  <dependencies>
					<dependency>
					  <groupId>org.springframework.build</groupId>
					  <artifactId>org.springframework.build.aws.ant</artifactId>
					  <version>3.0.5.RELEASE</version>
					</dependency>
					<dependency>
					  <groupId>net.java.dev.jets3t</groupId>
					  <artifactId>jets3t</artifactId>
					  <version>0.7.2</version>
					</dependency>
				  </dependencies>
				</plugin>
			  </plugins>
			</build>
		</profile>
	</profiles>
	<scm>
		<url>http://github.com/SpringSource/spring-amqp</url>
		<connection>scm:git:git://github.com/SpringSource/spring-amqp.git</connection>
		<developerConnection>scm:git:git://github.com/SpringSource/spring-amqp.git</developerConnection>
	</scm>
	<distributionManagement>
		<!-- see 'staging' profile for dry-run deployment settings -->
		<downloadUrl>http://www.springsource.com/download/community</downloadUrl>
		<site>
			<id>spring-site</id>
			<url>scp://static.springframework.org/var/www/domains/springframework.org/static/htdocs/spring-amqp/docs/${project.version}</url>
		</site>
		<repository>
			<id>spring-release</id>
			<name>Spring Release Repository</name>
			<url>s3://maven.springframework.org/release</url>
		</repository>
		<snapshotRepository>
			<id>spring-snapshot</id>
			<name>Spring Snapshot Repository</name>
			<url>s3://maven.springframework.org/snapshot</url>
		</snapshotRepository>
	</distributionManagement>
	<build>
		<extensions>
			<extension>
				<!-- available only in the springframework maven repository. see <repositories> section below -->
				<groupId>org.springframework.build.aws</groupId>
				<artifactId>org.springframework.build.aws.maven</artifactId>
				<version>3.0.0.RELEASE</version>
			</extension>
		</extensions>
		<pluginManagement>
		  <plugins>
			<plugin>
				<groupId>com.agilejava.docbkx</groupId>
				<artifactId>docbkx-maven-plugin</artifactId>
				<version>2.0.6</version>
				<dependencies>
					<dependency>
						<groupId>org.docbook</groupId>
						<artifactId>docbook-xml</artifactId>
						<version>4.4</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
				<configuration>
					<includes>index.xml</includes>
					<xincludeSupported>true</xincludeSupported>
					<foCustomization>${project.basedir}/src/docbkx/resources/xsl/fopdf.xsl</foCustomization>
					<!-- original spring-build fopdf xsl
					<foCustomization>src/docbkx/resources/xsl/pdf/fopdf.xsl</foCustomization> -->
					<htmlStylesheet>css/html.css</htmlStylesheet>
					<!-- produce single-page html output -->
					<chunkedOutput>false</chunkedOutput>
					<htmlCustomization>${project.basedir}/src/docbkx/resources/xsl/html.xsl</htmlCustomization>
					<!-- produce multi-page html output
					<chunkedOutput>false</chunkedOutput>
					<htmlCustomization>${project.basedir}/src/docbkx/resources/xsl/html_chunk.xsl</htmlCustomization> -->
					<entities>
						<entity>
							<name>version</name>
							<value>${pom.version}</value>
						</entity>
					</entities>
					<postProcess>
						<copy todir="${project.basedir}/target/site/reference">
							<fileset dir="${project.basedir}/target/docbkx">
								<include name="**/*.html" />
								<include name="**/*.pdf" />
							</fileset>
						</copy>
						<copy todir="${project.basedir}/target/site/reference/html">
							<fileset dir="${project.basedir}/src/docbkx/resources">
								<include name="**/*.css" />
								<include name="**/*.png" />
								<include name="**/*.gif" />
								<include name="**/*.jpg" />
							</fileset>
						</copy>
						<move file="${project.basedir}/target/site/reference/pdf/index.pdf" tofile="${project.basedir}/target/site/reference/pdf/spring-amqp-reference.pdf" failonerror="false" />
					</postProcess>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.5</version>
				<configuration>
				  <aggregate>true</aggregate>
				  <breakiterator>true</breakiterator>
				  <header>Spring AMQP</header>
				  <source>1.5</source>
				  <quiet>true</quiet>
				  <javadocDirectory>${project.basedir}/src/main/javadoc</javadocDirectory>
				  <overview>${project.basedir}/src/main/javadoc/overview.html</overview>
				  <stylesheetfile>${project.basedir}/src/main/javadoc/spring-javadoc.css</stylesheetfile>
				  <!-- copies doc-files subdirectory which contains image resources -->
				  <docfilessubdirs>true</docfilessubdirs>
				  <groups>
					<group>
					  <title>Spring AMQP</title>
					  <packages>org.springframework.amqp:org.springframework.amqp.*</packages>
					</group>
					<group>
					  <title>Spring Rabbit</title>
					  <packages>org.springframework.amqp.rabbit.*</packages>
					</group>
					<group>
					  <title>Spring Erlang</title>
					  <packages>org.springframework.erlang:org.springframework.erlang.*:org.springframework.util.exec</packages>
					</group>
				  </groups>
				  <excludePackageNames>org.springframework.amqp.samples</excludePackageNames>
				  <links>
					<link>http://static.springframework.org/spring/docs/3.0.5.RELEASE/javadoc-api</link>
					<link>http://java.sun.com/javase/6/docs/api</link>
				  </links>
				</configuration>
			</plugin>
		  </plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.agilejava.docbkx</groupId>
				<artifactId>docbkx-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>generate-html</goal>
							<goal>generate-pdf</goal>
						</goals>
						<phase>site</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<!-- the name of this project is 'spring-amqp-dist';
			 make sure the zip file is just 'spring-amqp'. -->
		<finalName>${dist.finalName}</finalName>
	</build>
	<repositories>
	  <repository>
		<!-- necessary for org.springframework.build.aws.maven dependency -->
		<id>repository.source.maven.release</id>
		<name>SpringSource Maven Release Repository</name>
		<url>http://repository.springsource.com/maven/bundles/release</url>
	  </repository>
	</repositories>
</project>
